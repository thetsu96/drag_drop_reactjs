{"ast":null,"code":"var _jsxFileName = \"/home/thet/Documents/Study React/Simple Test of Survey System's Feature/src/Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  const [questions, setQuestions] = useState(() => {\n    const savedQuestions = localStorage.getItem('surveyQuestions');\n    return savedQuestions ? JSON.parse(savedQuestions) : [];\n  });\n  const [answers, setAnswers] = useState(() => {\n    const savedAnswers = localStorage.getItem('surveyAnswers');\n    return savedAnswers ? JSON.parse(savedAnswers) : {};\n  });\n  const [currentScreen, setCurrentScreen] = useState(0);\n  const [remainingTime, setRemainingTime] = useState(60); // Initial remaining time in seconds (1 minute)\n  const timeoutIdRef = useRef(null);\n  const saveToLocalStorage = useCallback(() => {\n    localStorage.setItem('surveyQuestions', JSON.stringify(questions));\n    localStorage.setItem('surveyAnswers', JSON.stringify(answers));\n    localStorage.setItem('currentScreen', currentScreen);\n  }, [questions, answers, currentScreen]);\n  const resetAnswers = useCallback(() => {\n    setAnswers({});\n    setCurrentScreen(0);\n    localStorage.removeItem('surveyQuestions');\n    localStorage.removeItem('surveyAnswers');\n    localStorage.removeItem('currentScreen');\n    window.location.reload(); // Reload the page to reset the answers in UI\n  }, []);\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      console.log('Clearing local storage after timeout');\n      resetAnswers();\n    }, remainingTime * 1000);\n    saveToLocalStorage();\n    return () => {\n      clearTimeout(timeoutId);\n      console.log('Clearing timeout');\n    };\n  }, [questions, answers, currentScreen, remainingTime, saveToLocalStorage, resetAnswers]);\n  const handleQuestionChange = (e, index) => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setQuestions(prevQuestions => {\n      const newQuestions = [...prevQuestions];\n      newQuestions[index][name] = type === 'checkbox' ? checked : value;\n      return newQuestions;\n    });\n  };\n  const handleAnswerChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    clearTimeout(timeoutIdRef.current);\n    timeoutIdRef.current = setTimeout(() => {\n      console.log('Clearing local storage after user interaction');\n      resetAnswers();\n    }, remainingTime * 1000);\n  };\n  const addQuestion = () => {\n    setQuestions(prevQuestions => [...prevQuestions, {\n      id: `question${prevQuestions.length + 1}`,\n      question: '',\n      type: 'text',\n      options: [],\n      condition: {\n        questionId: '',\n        value: ''\n      }\n    }]);\n  };\n  const handleNext = () => {\n    setCurrentScreen(prevScreen => {\n      const nextScreen = prevScreen + 1;\n      if (nextScreen >= questions.length) return prevScreen;\n      if (questions[nextScreen].condition.questionId) {\n        const {\n          questionId,\n          value\n        } = questions[nextScreen].condition;\n        if (answers[questionId] !== value) return handleNext();\n      }\n      return nextScreen;\n    });\n  };\n  const handleBack = () => {\n    setCurrentScreen(prevScreen => prevScreen > 0 ? prevScreen - 1 : prevScreen);\n  };\n  useEffect(() => {\n    if (remainingTime > 0) {\n      const intervalId = setInterval(() => {\n        setRemainingTime(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(intervalId);\n    }\n  }, [remainingTime]);\n  const renderQuestion = (question, index) => {\n    switch (question.type) {\n      case 'radio':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: question.id,\n              value: option,\n              checked: answers[question.id] === option,\n              onChange: handleAnswerChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), option]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this);\n      case 'checkbox':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: `${question.id}_${i}`,\n              value: option,\n              checked: answers[`${question.id}_${i}`] || false,\n              onChange: handleAnswerChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), option]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this);\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: question.id,\n            value: answers[question.id] || '',\n            onChange: handleAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Remaining Time: \", remainingTime, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => currentScreen === index && renderQuestion(question, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      disabled: currentScreen === 0,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      disabled: currentScreen >= questions.length - 1,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question\",\n          placeholder: \"Question Text\",\n          value: question.question,\n          onChange: e => handleQuestionChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"type\",\n          value: question.type,\n          onChange: e => handleQuestionChange(e, index),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"radio\",\n            children: \"Radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"checkbox\",\n            children: \"Checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), question.type !== 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"options\",\n          placeholder: \"Options (comma separated)\",\n          value: question.options.join(', '),\n          onChange: e => {\n            const options = e.target.value.split(',').map(opt => opt.trim());\n            handleQuestionChange({\n              target: {\n                name: 'options',\n                value: options\n              }\n            }, index);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Condition: Show this question if\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"questionId\",\n            placeholder: \"Question ID\",\n            value: question.condition.questionId,\n            onChange: e => handleQuestionChange({\n              target: {\n                name: 'condition',\n                value: {\n                  ...question.condition,\n                  questionId: e.target.value\n                }\n              }\n            }, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"value\",\n            placeholder: \"Answer value\",\n            value: question.condition.value,\n            onChange: e => handleQuestionChange({\n              target: {\n                name: 'condition',\n                value: {\n                  ...question.condition,\n                  value: e.target.value\n                }\n              }\n            }, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(Survey, \"26bf0bMiND8dv+pF38buurCypcY=\");\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","Survey","_s","questions","setQuestions","savedQuestions","localStorage","getItem","JSON","parse","answers","setAnswers","savedAnswers","currentScreen","setCurrentScreen","remainingTime","setRemainingTime","timeoutIdRef","saveToLocalStorage","setItem","stringify","resetAnswers","removeItem","window","location","reload","timeoutId","setTimeout","console","log","clearTimeout","handleQuestionChange","e","index","name","value","type","checked","target","prevQuestions","newQuestions","handleAnswerChange","prevAnswers","current","addQuestion","id","length","question","options","condition","questionId","handleNext","prevScreen","nextScreen","handleBack","intervalId","setInterval","prevTime","clearInterval","renderQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","i","onChange","onClick","disabled","placeholder","join","split","opt","trim","_c","$RefreshReg$"],"sources":["/home/thet/Documents/Study React/Simple Test of Survey System's Feature/src/Survey.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\n\nconst Survey = () => {\n  const [questions, setQuestions] = useState(() => {\n    const savedQuestions = localStorage.getItem('surveyQuestions');\n    return savedQuestions ? JSON.parse(savedQuestions) : [];\n  });\n\n  const [answers, setAnswers] = useState(() => {\n    const savedAnswers = localStorage.getItem('surveyAnswers');\n    return savedAnswers ? JSON.parse(savedAnswers) : {};\n  });\n\n  const [currentScreen, setCurrentScreen] = useState(0);\n  const [remainingTime, setRemainingTime] = useState(60); // Initial remaining time in seconds (1 minute)\n  const timeoutIdRef = useRef(null);\n\n  const saveToLocalStorage = useCallback(() => {\n    localStorage.setItem('surveyQuestions', JSON.stringify(questions));\n    localStorage.setItem('surveyAnswers', JSON.stringify(answers));\n    localStorage.setItem('currentScreen', currentScreen);\n  }, [questions, answers, currentScreen]);\n\n  const resetAnswers = useCallback(() => {\n    setAnswers({});\n    setCurrentScreen(0);\n    localStorage.removeItem('surveyQuestions');\n    localStorage.removeItem('surveyAnswers');\n    localStorage.removeItem('currentScreen');\n    window.location.reload(); // Reload the page to reset the answers in UI\n  }, []);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      console.log('Clearing local storage after timeout');\n      resetAnswers();\n    }, remainingTime * 1000);\n\n    saveToLocalStorage();\n\n    return () => {\n      clearTimeout(timeoutId);\n      console.log('Clearing timeout');\n    };\n  }, [questions, answers, currentScreen, remainingTime, saveToLocalStorage, resetAnswers]);\n\n  const handleQuestionChange = (e, index) => {\n    const { name, value, type, checked } = e.target;\n    setQuestions((prevQuestions) => {\n      const newQuestions = [...prevQuestions];\n      newQuestions[index][name] = type === 'checkbox' ? checked : value;\n      return newQuestions;\n    });\n  };\n\n  const handleAnswerChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setAnswers((prevAnswers) => ({\n      ...prevAnswers,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n\n    clearTimeout(timeoutIdRef.current);\n    timeoutIdRef.current = setTimeout(() => {\n      console.log('Clearing local storage after user interaction');\n      resetAnswers();\n    }, remainingTime * 1000);\n  };\n\n  const addQuestion = () => {\n    setQuestions((prevQuestions) => [\n      ...prevQuestions,\n      { id: `question${prevQuestions.length + 1}`, question: '', type: 'text', options: [], condition: { questionId: '', value: '' } },\n    ]);\n  };\n\n  const handleNext = () => {\n    setCurrentScreen((prevScreen) => {\n      const nextScreen = prevScreen + 1;\n      if (nextScreen >= questions.length) return prevScreen;\n      if (questions[nextScreen].condition.questionId) {\n        const { questionId, value } = questions[nextScreen].condition;\n        if (answers[questionId] !== value) return handleNext();\n      }\n      return nextScreen;\n    });\n  };\n\n  const handleBack = () => {\n    setCurrentScreen((prevScreen) => (prevScreen > 0 ? prevScreen - 1 : prevScreen));\n  };\n\n  useEffect(() => {\n    if (remainingTime > 0) {\n      const intervalId = setInterval(() => {\n        setRemainingTime((prevTime) => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(intervalId);\n    }\n  }, [remainingTime]);\n\n  const renderQuestion = (question, index) => {\n    switch (question.type) {\n      case 'radio':\n        return (\n          <div key={index}>\n            <label>{question.question}</label>\n            {question.options.map((option, i) => (\n              <div key={i}>\n                <input\n                  type=\"radio\"\n                  name={question.id}\n                  value={option}\n                  checked={answers[question.id] === option}\n                  onChange={handleAnswerChange}\n                />\n                {option}\n              </div>\n            ))}\n          </div>\n        );\n      case 'checkbox':\n        return (\n          <div key={index}>\n            <label>{question.question}</label>\n            {question.options.map((option, i) => (\n              <div key={i}>\n                <input\n                  type=\"checkbox\"\n                  name={`${question.id}_${i}`}\n                  value={option}\n                  checked={answers[`${question.id}_${i}`] || false}\n                  onChange={handleAnswerChange}\n                />\n                {option}\n              </div>\n            ))}\n          </div>\n        );\n      case 'text':\n        return (\n          <div key={index}>\n            <label>{question.question}</label>\n            <input\n              type=\"text\"\n              name={question.id}\n              value={answers[question.id] || ''}\n              onChange={handleAnswerChange}\n            />\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div>\n      <div>Remaining Time: {remainingTime} seconds</div>\n      <div>\n        {questions.map((question, index) => (\n          currentScreen === index && renderQuestion(question, index)\n        ))}\n      </div>\n      <button onClick={handleBack} disabled={currentScreen === 0}>Back</button>\n      <button onClick={handleNext} disabled={currentScreen >= questions.length - 1}>Next</button>\n      <div>\n        <h3>Add a New Question</h3>\n        <button onClick={addQuestion}>Add Question</button>\n        {questions.map((question, index) => (\n          <div key={index}>\n            <input\n              type=\"text\"\n              name=\"question\"\n              placeholder=\"Question Text\"\n              value={question.question}\n              onChange={(e) => handleQuestionChange(e, index)}\n            />\n            <select\n              name=\"type\"\n              value={question.type}\n              onChange={(e) => handleQuestionChange(e, index)}\n            >\n              <option value=\"text\">Text</option>\n              <option value=\"radio\">Radio</option>\n              <option value=\"checkbox\">Checkbox</option>\n            </select>\n            {question.type !== 'text' && (\n              <input\n                type=\"text\"\n                name=\"options\"\n                placeholder=\"Options (comma separated)\"\n                value={question.options.join(', ')}\n                onChange={(e) => {\n                  const options = e.target.value.split(',').map((opt) => opt.trim());\n                  handleQuestionChange({ target: { name: 'options', value: options } }, index);\n                }}\n              />\n            )}\n            <div>\n              <label>Condition: Show this question if</label>\n              <input\n                type=\"text\"\n                name=\"questionId\"\n                placeholder=\"Question ID\"\n                value={question.condition.questionId}\n                onChange={(e) => handleQuestionChange({ target: { name: 'condition', value: { ...question.condition, questionId: e.target.value } } }, index)}\n              />\n              <input\n                type=\"text\"\n                name=\"value\"\n                placeholder=\"Answer value\"\n                value={question.condition.value}\n                onChange={(e) => handleQuestionChange({ target: { name: 'condition', value: { ...question.condition, value: e.target.value } } }, index)}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Survey;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}