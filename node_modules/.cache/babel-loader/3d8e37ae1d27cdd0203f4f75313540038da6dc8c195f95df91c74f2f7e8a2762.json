{"ast":null,"code":"var _jsxFileName = \"/home/thet/Documents/Study React/Simple Test of Survey System's Feature/src/Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Blog from './Blog';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  const [blogs, setBlogs] = useState(() => {\n    const savedBlogs = localStorage.getItem('surveyBlogs');\n    return savedBlogs ? JSON.parse(savedBlogs) : [{\n      id: 'blog1',\n      title: 'Blog 1',\n      content: 'Content for blog 1'\n    }, {\n      id: 'blog2',\n      title: 'Blog 2',\n      content: 'Content for blog 2'\n    }\n    // Add more blogs if necessary\n    ];\n  });\n  const [questions, setQuestions] = useState(() => {\n    const savedQuestions = localStorage.getItem('surveyQuestions');\n    return savedQuestions ? JSON.parse(savedQuestions) : [];\n  });\n  const [answers, setAnswers] = useState(() => {\n    const savedAnswers = localStorage.getItem('surveyAnswers');\n    return savedAnswers ? JSON.parse(savedAnswers) : {};\n  });\n  const [currentScreen, setCurrentScreen] = useState(0);\n  const [remainingTime, setRemainingTime] = useState(60); // Initial remaining time in seconds (1 minute)\n  const timeoutIdRef = useRef(null);\n  const saveToLocalStorage = useCallback(() => {\n    localStorage.setItem('surveyBlogs', JSON.stringify(blogs));\n    localStorage.setItem('surveyQuestions', JSON.stringify(questions));\n    localStorage.setItem('surveyAnswers', JSON.stringify(answers));\n    localStorage.setItem('currentScreen', currentScreen);\n  }, [blogs, questions, answers, currentScreen]);\n  const resetAnswers = useCallback(() => {\n    setAnswers({});\n    setCurrentScreen(0);\n    localStorage.removeItem('surveyBlogs');\n    localStorage.removeItem('surveyQuestions');\n    localStorage.removeItem('surveyAnswers');\n    localStorage.removeItem('currentScreen');\n    window.location.reload(); // Reload the page to reset the answers in UI\n  }, []);\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      console.log('Clearing local storage after timeout');\n      resetAnswers();\n    }, remainingTime * 1000);\n    saveToLocalStorage();\n    return () => {\n      clearTimeout(timeoutId);\n      console.log('Clearing timeout');\n    };\n  }, [blogs, questions, answers, currentScreen, remainingTime, saveToLocalStorage, resetAnswers]);\n  const handleQuestionChange = (e, index) => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setQuestions(prevQuestions => {\n      const newQuestions = [...prevQuestions];\n      newQuestions[index][name] = type === 'checkbox' ? checked : value;\n      return newQuestions;\n    });\n  };\n  const handleAnswerChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    clearTimeout(timeoutIdRef.current);\n    timeoutIdRef.current = setTimeout(() => {\n      console.log('Clearing local storage after user interaction');\n      resetAnswers();\n    }, remainingTime * 1000);\n  };\n  const addQuestion = () => {\n    setQuestions(prevQuestions => [...prevQuestions, {\n      id: `question${prevQuestions.length + 1}`,\n      question: '',\n      type: 'text',\n      options: []\n    }]);\n  };\n  const handleNext = () => {\n    setCurrentScreen(prevScreen => prevScreen < questions.length - 1 ? prevScreen + 1 : prevScreen);\n  };\n  const handleBack = () => {\n    setCurrentScreen(prevScreen => prevScreen > 0 ? prevScreen - 1 : prevScreen);\n  };\n  useEffect(() => {\n    if (remainingTime > 0) {\n      const intervalId = setInterval(() => {\n        setRemainingTime(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(intervalId);\n    }\n  }, [remainingTime]);\n  const renderQuestion = (question, index) => {\n    return /*#__PURE__*/_jsxDEV(Question, {\n      question: question,\n      handleAnswerChange: handleAnswerChange\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  };\n  const moveBlog = (dragIndex, hoverIndex) => {\n    const draggedBlog = blogs[dragIndex];\n    const updatedBlogs = [...blogs];\n    updatedBlogs.splice(dragIndex, 1);\n    updatedBlogs.splice(hoverIndex, 0, draggedBlog);\n    setBlogs(updatedBlogs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Remaining Time: \", remainingTime, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => currentScreen === index && renderQuestion(question, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      disabled: currentScreen === 0,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      disabled: currentScreen >= questions.length - 1,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question\",\n          placeholder: \"Question Text\",\n          value: question.question,\n          onChange: e => handleQuestionChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"type\",\n          value: question.type,\n          onChange: e => handleQuestionChange(e, index),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"radio\",\n            children: \"Radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"checkbox\",\n            children: \"Checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), question.type !== 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"options\",\n          placeholder: \"Options (comma separated)\",\n          value: question.options.join(', '),\n          onChange: e => {\n            const options = e.target.value.split(',').map(opt => opt.trim());\n            handleQuestionChange({\n              target: {\n                name: 'options',\n                value: options\n              }\n            }, index);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Blogs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), blogs.map((blog, index) => /*#__PURE__*/_jsxDEV(Blog, {\n          index: index,\n          blog: blog,\n          moveBlog: moveBlog\n        }, blog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Survey, \"vbgd+bNYPiV0e6iPs1I41yY9TZU=\");\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","DndProvider","HTML5Backend","Blog","Question","jsxDEV","_jsxDEV","Survey","_s","blogs","setBlogs","savedBlogs","localStorage","getItem","JSON","parse","id","title","content","questions","setQuestions","savedQuestions","answers","setAnswers","savedAnswers","currentScreen","setCurrentScreen","remainingTime","setRemainingTime","timeoutIdRef","saveToLocalStorage","setItem","stringify","resetAnswers","removeItem","window","location","reload","timeoutId","setTimeout","console","log","clearTimeout","handleQuestionChange","e","index","name","value","type","checked","target","prevQuestions","newQuestions","handleAnswerChange","prevAnswers","current","addQuestion","length","question","options","handleNext","prevScreen","handleBack","intervalId","setInterval","prevTime","clearInterval","renderQuestion","fileName","_jsxFileName","lineNumber","columnNumber","moveBlog","dragIndex","hoverIndex","draggedBlog","updatedBlogs","splice","children","map","onClick","disabled","placeholder","onChange","join","split","opt","trim","backend","blog","_c","$RefreshReg$"],"sources":["/home/thet/Documents/Study React/Simple Test of Survey System's Feature/src/Survey.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Blog from './Blog';\nimport Question from './Question';\n\nconst Survey = () => {\n  const [blogs, setBlogs] = useState(() => {\n    const savedBlogs = localStorage.getItem('surveyBlogs');\n    return savedBlogs ? JSON.parse(savedBlogs) : [\n      { id: 'blog1', title: 'Blog 1', content: 'Content for blog 1' },\n      { id: 'blog2', title: 'Blog 2', content: 'Content for blog 2' },\n      // Add more blogs if necessary\n    ];\n  });\n\n  const [questions, setQuestions] = useState(() => {\n    const savedQuestions = localStorage.getItem('surveyQuestions');\n    return savedQuestions ? JSON.parse(savedQuestions) : [];\n  });\n\n  const [answers, setAnswers] = useState(() => {\n    const savedAnswers = localStorage.getItem('surveyAnswers');\n    return savedAnswers ? JSON.parse(savedAnswers) : {};\n  });\n\n  const [currentScreen, setCurrentScreen] = useState(0);\n  const [remainingTime, setRemainingTime] = useState(60); // Initial remaining time in seconds (1 minute)\n  const timeoutIdRef = useRef(null);\n\n  const saveToLocalStorage = useCallback(() => {\n    localStorage.setItem('surveyBlogs', JSON.stringify(blogs));\n    localStorage.setItem('surveyQuestions', JSON.stringify(questions));\n    localStorage.setItem('surveyAnswers', JSON.stringify(answers));\n    localStorage.setItem('currentScreen', currentScreen);\n  }, [blogs, questions, answers, currentScreen]);\n\n  const resetAnswers = useCallback(() => {\n    setAnswers({});\n    setCurrentScreen(0);\n    localStorage.removeItem('surveyBlogs');\n    localStorage.removeItem('surveyQuestions');\n    localStorage.removeItem('surveyAnswers');\n    localStorage.removeItem('currentScreen');\n    window.location.reload(); // Reload the page to reset the answers in UI\n  }, []);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      console.log('Clearing local storage after timeout');\n      resetAnswers();\n    }, remainingTime * 1000);\n\n    saveToLocalStorage();\n\n    return () => {\n      clearTimeout(timeoutId);\n      console.log('Clearing timeout');\n    };\n  }, [blogs, questions, answers, currentScreen, remainingTime, saveToLocalStorage, resetAnswers]);\n\n  const handleQuestionChange = (e, index) => {\n    const { name, value, type, checked } = e.target;\n    setQuestions((prevQuestions) => {\n      const newQuestions = [...prevQuestions];\n      newQuestions[index][name] = type === 'checkbox' ? checked : value;\n      return newQuestions;\n    });\n  };\n\n  const handleAnswerChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setAnswers((prevAnswers) => ({\n      ...prevAnswers,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n\n    clearTimeout(timeoutIdRef.current);\n    timeoutIdRef.current = setTimeout(() => {\n      console.log('Clearing local storage after user interaction');\n      resetAnswers();\n    }, remainingTime * 1000);\n  };\n\n  const addQuestion = () => {\n    setQuestions((prevQuestions) => [\n      ...prevQuestions,\n      { id: `question${prevQuestions.length + 1}`, question: '', type: 'text', options: [] },\n    ]);\n  };\n\n  const handleNext = () => {\n    setCurrentScreen((prevScreen) => (prevScreen < questions.length - 1 ? prevScreen + 1 : prevScreen));\n  };\n\n  const handleBack = () => {\n    setCurrentScreen((prevScreen) => (prevScreen > 0 ? prevScreen - 1 : prevScreen));\n  };\n\n  useEffect(() => {\n    if (remainingTime > 0) {\n      const intervalId = setInterval(() => {\n        setRemainingTime((prevTime) => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(intervalId);\n    }\n  }, [remainingTime]);\n\n  const renderQuestion = (question, index) => {\n    return (\n      <Question\n        key={index}\n        question={question}\n        handleAnswerChange={handleAnswerChange}\n      />\n    );\n  };\n\n  const moveBlog = (dragIndex, hoverIndex) => {\n    const draggedBlog = blogs[dragIndex];\n    const updatedBlogs = [...blogs];\n    updatedBlogs.splice(dragIndex, 1);\n    updatedBlogs.splice(hoverIndex, 0, draggedBlog);\n    setBlogs(updatedBlogs);\n  };\n\n  return (\n    <div>\n      <div>Remaining Time: {remainingTime} seconds</div>\n      <div>\n        {questions.map((question, index) => (\n          currentScreen === index && renderQuestion(question, index)\n        ))}\n      </div>\n      <button onClick={handleBack} disabled={currentScreen === 0}>Back</button>\n      <button onClick={handleNext} disabled={currentScreen >= questions.length - 1}>Next</button>\n      <div>\n        <h3>Add a New Question</h3>\n        <button onClick={addQuestion}>Add Question</button>\n        {questions.map((question, index) => (\n          <div key={index}>\n            <input\n              type=\"text\"\n              name=\"question\"\n              placeholder=\"Question Text\"\n              value={question.question}\n              onChange={(e) => handleQuestionChange(e, index)}\n            />\n            <select\n              name=\"type\"\n              value={question.type}\n              onChange={(e) => handleQuestionChange(e, index)}\n            >\n              <option value=\"text\">Text</option>\n              <option value=\"radio\">Radio</option>\n              <option value=\"checkbox\">Checkbox</option>\n            </select>\n            {question.type !== 'text' && (\n              <input\n                type=\"text\"\n                name=\"options\"\n                placeholder=\"Options (comma separated)\"\n                value={question.options.join(', ')}\n                onChange={(e) => {\n                  const options = e.target.value.split(',').map((opt) => opt.trim());\n                  handleQuestionChange({ target: { name: 'options', value: options } }, index);\n                }}\n              />\n            )}\n          </div>\n        ))}\n      </div>\n      <DndProvider backend={HTML5Backend}>\n        <div>\n          <h3>Blogs</h3>\n          {blogs.map((blog, index) => (\n            <Blog key={blog.id} index={index} blog={blog} moveBlog={moveBlog} />\n          ))}\n        </div>\n      </DndProvider>\n    </div>\n  );\n};\n\nexport default Survey;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}