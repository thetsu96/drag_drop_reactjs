{"ast":null,"code":"var _jsxFileName = \"/home/thet/Documents/Study React/Simple Test of Survey System's Feature/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const initialQuestions = [{\n    id: 1,\n    mainQuestion: \"Main Question 1\",\n    subQuestions: [{\n      id: \"1.1\",\n      question: \"Sub Question 1.1\",\n      options: [\"Option 1\", \"Option 2\", \"Option 3\"],\n      checked: [],\n      text: \"\"\n    }, {\n      id: \"1.2\",\n      question: \"Sub Question 1.2\",\n      options: [\"Option A\", \"Option B\", \"Option C\"],\n      checked: [],\n      text: \"\"\n    }]\n  }, {\n    id: 2,\n    mainQuestion: \"Main Question 2\",\n    subQuestions: [{\n      id: \"2.1\",\n      question: \"Sub Question 2.1\",\n      options: [\"Yes\", \"No\"],\n      checked: [],\n      text: \"\"\n    }, {\n      id: \"2.2\",\n      question: \"Sub Question 2.2\",\n      options: [\"True\", \"False\"],\n      checked: [],\n      text: \"\"\n    }]\n  }];\n  const [questions, setQuestions] = useState(initialQuestions);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const onDragStart = (e, index) => {\n    setDraggedItem(index);\n    e.dataTransfer.effectAllowed = \"move\";\n  };\n  const onDragOver = e => {\n    e.preventDefault();\n  };\n  const onDrop = (e, newIndex) => {\n    e.preventDefault();\n    const draggedFrom = draggedItem;\n    if (draggedFrom === newIndex) {\n      return;\n    }\n    const updatedQuestions = [...questions];\n    const itemToMove = updatedQuestions.splice(draggedFrom, 1)[0];\n    updatedQuestions.splice(newIndex, 0, itemToMove);\n\n    // Update IDs based on new order\n    updatedQuestions.forEach((question, index) => {\n      question.id = index + 1;\n      question.subQuestions.forEach((subQuestion, subIndex) => {\n        subQuestion.id = `${question.id}.${subIndex + 1}`;\n      });\n    });\n    setQuestions(updatedQuestions);\n    setDraggedItem(null);\n  };\n  const handleCheckboxChange = (mainIndex, subIndex, optionIndex) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[mainIndex].subQuestions[subIndex].checked[optionIndex] = !updatedQuestions[mainIndex].subQuestions[subIndex].checked[optionIndex];\n    setQuestions(updatedQuestions);\n  };\n  const handleTextboxChange = (mainIndex, subIndex, text) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[mainIndex].subQuestions[subIndex].text = text;\n    setQuestions(updatedQuestions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: questions.map((mainQuestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draggable\",\n      draggable: true,\n      onDragStart: e => onDragStart(e, index),\n      onDragOver: onDragOver,\n      onDrop: e => onDrop(e, index),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drag-handle\",\n        children: \"\\u2261\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-question\",\n        children: mainQuestion.mainQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), mainQuestion.subQuestions.map((subQuestion, subIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"id\",\n          children: [\"ID: \", subQuestion.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: subQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: subQuestion.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: subQuestion.checked[optionIndex] ? \"checkbox\" : \"radio\",\n              checked: subQuestion.checked[optionIndex],\n              onChange: () => handleCheckboxChange(index, subIndex, optionIndex)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), option]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: subQuestion.text,\n            onChange: e => handleTextboxChange(index, subIndex, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, subQuestion.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))]\n    }, mainQuestion.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gHBdwyWLvzlceOAzh3L2C5WW5CQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","initialQuestions","id","mainQuestion","subQuestions","question","options","checked","text","questions","setQuestions","draggedItem","setDraggedItem","onDragStart","e","index","dataTransfer","effectAllowed","onDragOver","preventDefault","onDrop","newIndex","draggedFrom","updatedQuestions","itemToMove","splice","forEach","subQuestion","subIndex","handleCheckboxChange","mainIndex","optionIndex","handleTextboxChange","className","children","map","draggable","fileName","_jsxFileName","lineNumber","columnNumber","option","type","onChange","value","target","_c","$RefreshReg$"],"sources":["/home/thet/Documents/Study React/Simple Test of Survey System's Feature/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const initialQuestions = [\n    {\n      id: 1,\n      mainQuestion: \"Main Question 1\",\n      subQuestions: [\n        { id: \"1.1\", question: \"Sub Question 1.1\", options: [\"Option 1\", \"Option 2\", \"Option 3\"], checked: [], text: \"\" },\n        { id: \"1.2\", question: \"Sub Question 1.2\", options: [\"Option A\", \"Option B\", \"Option C\"], checked: [], text: \"\" }\n      ]\n    },\n    {\n      id: 2,\n      mainQuestion: \"Main Question 2\",\n      subQuestions: [\n        { id: \"2.1\", question: \"Sub Question 2.1\", options: [\"Yes\", \"No\"], checked: [], text: \"\" },\n        { id: \"2.2\", question: \"Sub Question 2.2\", options: [\"True\", \"False\"], checked: [], text: \"\" }\n      ]\n    }\n  ];\n\n  const [questions, setQuestions] = useState(initialQuestions);\n  const [draggedItem, setDraggedItem] = useState(null);\n\n  const onDragStart = (e, index) => {\n    setDraggedItem(index);\n    e.dataTransfer.effectAllowed = \"move\";\n  };\n\n  const onDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const onDrop = (e, newIndex) => {\n    e.preventDefault();\n    const draggedFrom = draggedItem;\n\n    if (draggedFrom === newIndex) {\n      return;\n    }\n\n    const updatedQuestions = [...questions];\n    const itemToMove = updatedQuestions.splice(draggedFrom, 1)[0];\n    updatedQuestions.splice(newIndex, 0, itemToMove);\n\n    // Update IDs based on new order\n    updatedQuestions.forEach((question, index) => {\n      question.id = index + 1;\n      question.subQuestions.forEach((subQuestion, subIndex) => {\n        subQuestion.id = `${question.id}.${subIndex + 1}`;\n      });\n    });\n\n    setQuestions(updatedQuestions);\n    setDraggedItem(null);\n  };\n\n  const handleCheckboxChange = (mainIndex, subIndex, optionIndex) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[mainIndex].subQuestions[subIndex].checked[optionIndex] = !updatedQuestions[mainIndex].subQuestions[subIndex].checked[optionIndex];\n\n    setQuestions(updatedQuestions);\n  };\n\n  const handleTextboxChange = (mainIndex, subIndex, text) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[mainIndex].subQuestions[subIndex].text = text;\n\n    setQuestions(updatedQuestions);\n  };\n\n  return (\n    <div className=\"App\">\n      {questions.map((mainQuestion, index) => (\n        <div key={mainQuestion.id}\n          className=\"draggable\"\n          draggable\n          onDragStart={(e) => onDragStart(e, index)}\n          onDragOver={onDragOver}\n          onDrop={(e) => onDrop(e, index)}\n        >\n          <div className=\"drag-handle\">â‰¡</div>\n          <div className=\"main-question\">{mainQuestion.mainQuestion}</div>\n          {mainQuestion.subQuestions.map((subQuestion, subIndex) => (\n            <div key={subQuestion.id}>\n              <div className=\"id\">ID: {subQuestion.id}</div>\n              <div className=\"question\">{subQuestion.question}</div>\n              <div className=\"options\">\n                {subQuestion.options.map((option, optionIndex) => (\n                  <div key={optionIndex} className=\"option\">\n                    <input\n                      type={subQuestion.checked[optionIndex] ? \"checkbox\" : \"radio\"}\n                      checked={subQuestion.checked[optionIndex]}\n                      onChange={() => handleCheckboxChange(index, subIndex, optionIndex)}\n                    />\n                    {option}\n                  </div>\n                ))}\n              </div>\n              <div className=\"text\">\n                <input\n                  type=\"text\"\n                  value={subQuestion.text}\n                  onChange={(e) => handleTextboxChange(index, subIndex, e.target.value)}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}