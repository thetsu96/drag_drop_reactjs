{"ast":null,"code":"var _jsxFileName = \"/home/thet/Documents/Study React/Simple Test of Survey System's Feature/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const initialQuestions = [{\n    id: 1,\n    question: \"Question 1\",\n    options: [\"Option 1\", \"Option 2\", \"Option 3\"],\n    checked: [],\n    text: \"\"\n  }, {\n    id: 2,\n    question: \"Question 2\",\n    options: [\"Option A\", \"Option B\", \"Option C\"],\n    checked: [],\n    text: \"\"\n  }, {\n    id: 3,\n    question: \"Question 3\",\n    options: [\"Yes\", \"No\"],\n    checked: [],\n    text: \"\"\n  }, {\n    id: 4,\n    question: \"Question 4\",\n    options: [\"True\", \"False\"],\n    checked: [],\n    text: \"\"\n  }];\n  const [questions, setQuestions] = useState(initialQuestions);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const onDragStart = (e, index) => {\n    setDraggedItem(questions[index]);\n    e.dataTransfer.effectAllowed = \"move\";\n  };\n  const onDragOver = e => {\n    e.preventDefault();\n  };\n  const onDrop = (e, index) => {\n    e.preventDefault();\n    const updatedQuestions = questions.filter(item => item !== draggedItem);\n    updatedQuestions.splice(index, 0, draggedItem);\n    const reorderedQuestions = updatedQuestions.map((item, idx) => ({\n      ...item,\n      id: idx + 1\n    }));\n    setQuestions(reorderedQuestions);\n    setDraggedItem(null);\n  };\n  const handleCheckboxChange = (questionIndex, optionIndex) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[questionIndex].checked[optionIndex] = !updatedQuestions[questionIndex].checked[optionIndex];\n    setQuestions(updatedQuestions);\n  };\n  const handleTextboxChange = (questionIndex, text) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[questionIndex].text = text;\n    setQuestions(updatedQuestions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: questions.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draggable\",\n      draggable: true,\n      onDragStart: e => onDragStart(e, index),\n      onDragOver: onDragOver,\n      onDrop: e => onDrop(e, index),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drag-handle\",\n        children: \"\\u2261\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"id\",\n        children: [\"ID: \", item.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: item.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: item.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: item.checked[optionIndex] ? \"checkbox\" : \"radio\",\n            checked: item.checked[optionIndex],\n            onChange: () => handleCheckboxChange(index, optionIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), option]\n        }, optionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: item.text,\n          onChange: e => handleTextboxChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gHBdwyWLvzlceOAzh3L2C5WW5CQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","initialQuestions","id","question","options","checked","text","questions","setQuestions","draggedItem","setDraggedItem","onDragStart","e","index","dataTransfer","effectAllowed","onDragOver","preventDefault","onDrop","updatedQuestions","filter","item","splice","reorderedQuestions","map","idx","handleCheckboxChange","questionIndex","optionIndex","handleTextboxChange","className","children","draggable","fileName","_jsxFileName","lineNumber","columnNumber","option","type","onChange","value","target","_c","$RefreshReg$"],"sources":["/home/thet/Documents/Study React/Simple Test of Survey System's Feature/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const initialQuestions = [\n    { id: 1, question: \"Question 1\", options: [\"Option 1\", \"Option 2\", \"Option 3\"], checked: [], text: \"\" },\n    { id: 2, question: \"Question 2\", options: [\"Option A\", \"Option B\", \"Option C\"], checked: [], text: \"\" },\n    { id: 3, question: \"Question 3\", options: [\"Yes\", \"No\"], checked: [], text: \"\" },\n    { id: 4, question: \"Question 4\", options: [\"True\", \"False\"], checked: [], text: \"\" }\n  ];\n\n  const [questions, setQuestions] = useState(initialQuestions);\n  const [draggedItem, setDraggedItem] = useState(null);\n\n  const onDragStart = (e, index) => {\n    setDraggedItem(questions[index]);\n    e.dataTransfer.effectAllowed = \"move\";\n  };\n\n  const onDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const onDrop = (e, index) => {\n    e.preventDefault();\n    const updatedQuestions = questions.filter((item) => item !== draggedItem);\n    updatedQuestions.splice(index, 0, draggedItem);\n\n    const reorderedQuestions = updatedQuestions.map((item, idx) => ({\n      ...item,\n      id: idx + 1\n    }));\n\n    setQuestions(reorderedQuestions);\n    setDraggedItem(null);\n  };\n\n  const handleCheckboxChange = (questionIndex, optionIndex) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[questionIndex].checked[optionIndex] = !updatedQuestions[questionIndex].checked[optionIndex];\n    setQuestions(updatedQuestions);\n  };\n\n  const handleTextboxChange = (questionIndex, text) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[questionIndex].text = text;\n    setQuestions(updatedQuestions);\n  };\n\n  return (\n    <div className=\"App\">\n      {questions.map((item, index) => (\n        <div\n          key={item.id}\n          className=\"draggable\"\n          draggable\n          onDragStart={(e) => onDragStart(e, index)}\n          onDragOver={onDragOver}\n          onDrop={(e) => onDrop(e, index)}\n        >\n          <div className=\"drag-handle\">â‰¡</div>\n          <div className=\"id\">ID: {item.id}</div>\n          <div className=\"question\">{item.question}</div>\n          <div className=\"options\">\n            {item.options.map((option, optionIndex) => (\n              <div key={optionIndex} className=\"option\">\n                <input\n                  type={item.checked[optionIndex] ? \"checkbox\" : \"radio\"}\n                  checked={item.checked[optionIndex]}\n                  onChange={() => handleCheckboxChange(index, optionIndex)}\n                />\n                {option}\n              </div>\n            ))}\n          </div>\n          <div className=\"text\">\n            <input\n              type=\"text\"\n              value={item.text}\n              onChange={(e) => handleTextboxChange(index, e.target.value)}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}