{"ast":null,"code":"var _jsxFileName = \"/home/thet/Documents/Study React/Simple Test of Survey System's Feature/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const initialQuestions = [{\n    id: 1,\n    mainQuestion: \"Main Question 1\",\n    subQuestions: [{\n      id: \"1.1\",\n      question: \"Sub Question 1.1\",\n      options: [\"Option 1\", \"Option 2\", \"Option 3\"],\n      checked: [],\n      text: \"\"\n    }, {\n      id: \"1.2\",\n      question: \"Sub Question 1.2\",\n      options: [\"Option A\", \"Option B\", \"Option C\"],\n      checked: [],\n      text: \"\"\n    }]\n  }, {\n    id: 2,\n    mainQuestion: \"Main Question 2\",\n    subQuestions: [{\n      id: \"2.1\",\n      question: \"Sub Question 2.1\",\n      options: [\"Yes\", \"No\"],\n      checked: [],\n      text: \"\"\n    }, {\n      id: \"2.2\",\n      question: \"Sub Question 2.2\",\n      options: [\"True\", \"False\"],\n      checked: [],\n      text: \"\"\n    }]\n  }];\n  const [questions, setQuestions] = useState(initialQuestions);\n  const [draggedMainItem, setDraggedMainItem] = useState(null);\n  const [draggedSubItem, setDraggedSubItem] = useState(null);\n  const onMainDragStart = (e, mainIndex) => {\n    setDraggedMainItem(mainIndex);\n    e.dataTransfer.effectAllowed = \"move\";\n  };\n  const onSubDragStart = (e, mainIndex, subIndex) => {\n    setDraggedSubItem({\n      mainIndex,\n      subIndex\n    });\n    e.dataTransfer.effectAllowed = \"move\";\n  };\n  const onDragOver = e => {\n    e.preventDefault();\n  };\n  const onMainDrop = (e, newIndex) => {\n    e.preventDefault();\n    const draggedFrom = draggedMainItem;\n    if (draggedFrom === newIndex) {\n      return;\n    }\n    const updatedQuestions = [...questions];\n    const itemToMove = updatedQuestions.splice(draggedFrom, 1)[0];\n    updatedQuestions.splice(newIndex, 0, itemToMove);\n\n    // Update IDs based on new order\n    updatedQuestions.forEach((question, index) => {\n      question.id = index + 1;\n      question.subQuestions.forEach((subQuestion, subIndex) => {\n        subQuestion.id = `${question.id}.${subIndex + 1}`;\n      });\n    });\n    setQuestions(updatedQuestions);\n    setDraggedMainItem(null);\n  };\n  const onSubDrop = (e, mainIndex, newIndex) => {\n    e.preventDefault();\n    const draggedFrom = draggedSubItem;\n    const draggedTo = {\n      mainIndex,\n      newIndex\n    };\n    if (draggedFrom.mainIndex === draggedTo.mainIndex && draggedFrom.subIndex === draggedTo.subIndex) {\n      return;\n    }\n    const updatedQuestions = [...questions];\n    const itemToMove = updatedQuestions[draggedFrom.mainIndex].subQuestions.splice(draggedFrom.subIndex, 1)[0];\n    updatedQuestions[draggedTo.mainIndex].subQuestions.splice(draggedTo.subIndex, 0, itemToMove);\n\n    // Update IDs based on new order\n    updatedQuestions.forEach(question => {\n      question.subQuestions.forEach((subQuestion, index) => {\n        subQuestion.id = `${question.id}.${index + 1}`;\n      });\n    });\n    setQuestions(updatedQuestions);\n    setDraggedSubItem(null);\n  };\n  const handleCheckboxChange = (mainIndex, subIndex, optionIndex) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[mainIndex].subQuestions[subIndex].checked[optionIndex] = !updatedQuestions[mainIndex].subQuestions[subIndex].checked[optionIndex];\n    setQuestions(updatedQuestions);\n  };\n  const handleTextboxChange = (mainIndex, subIndex, text) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[mainIndex].subQuestions[subIndex].text = text;\n    setQuestions(updatedQuestions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: questions.map((mainQuestion, mainIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"draggable main-question\",\n        draggable: true,\n        onDragStart: e => onMainDragStart(e, mainIndex),\n        onDragOver: onDragOver,\n        onDrop: e => onMainDrop(e, mainIndex),\n        children: [\"\\u2261 \", mainQuestion.mainQuestion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), mainQuestion.subQuestions.map((subQuestion, subIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"draggable sub-question\",\n        draggable: true,\n        onDragStart: e => onSubDragStart(e, mainIndex, subIndex),\n        onDragOver: onDragOver,\n        onDrop: e => onSubDrop(e, mainIndex, subIndex),\n        children: [\"\\u2261 \", subQuestion.question]\n      }, subQuestion.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this))]\n    }, mainQuestion.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FIgy3EnLiMkuapk1iznJVyt4P6A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","initialQuestions","id","mainQuestion","subQuestions","question","options","checked","text","questions","setQuestions","draggedMainItem","setDraggedMainItem","draggedSubItem","setDraggedSubItem","onMainDragStart","e","mainIndex","dataTransfer","effectAllowed","onSubDragStart","subIndex","onDragOver","preventDefault","onMainDrop","newIndex","draggedFrom","updatedQuestions","itemToMove","splice","forEach","index","subQuestion","onSubDrop","draggedTo","handleCheckboxChange","optionIndex","handleTextboxChange","className","children","map","draggable","onDragStart","onDrop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/thet/Documents/Study React/Simple Test of Survey System's Feature/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const initialQuestions = [\n    {\n      id: 1,\n      mainQuestion: \"Main Question 1\",\n      subQuestions: [\n        { id: \"1.1\", question: \"Sub Question 1.1\", options: [\"Option 1\", \"Option 2\", \"Option 3\"], checked: [], text: \"\" },\n        { id: \"1.2\", question: \"Sub Question 1.2\", options: [\"Option A\", \"Option B\", \"Option C\"], checked: [], text: \"\" }\n      ]\n    },\n    {\n      id: 2,\n      mainQuestion: \"Main Question 2\",\n      subQuestions: [\n        { id: \"2.1\", question: \"Sub Question 2.1\", options: [\"Yes\", \"No\"], checked: [], text: \"\" },\n        { id: \"2.2\", question: \"Sub Question 2.2\", options: [\"True\", \"False\"], checked: [], text: \"\" }\n      ]\n    }\n  ];\n\n  const [questions, setQuestions] = useState(initialQuestions);\n  const [draggedMainItem, setDraggedMainItem] = useState(null);\n  const [draggedSubItem, setDraggedSubItem] = useState(null);\n\n  const onMainDragStart = (e, mainIndex) => {\n    setDraggedMainItem(mainIndex);\n    e.dataTransfer.effectAllowed = \"move\";\n  };\n\n  const onSubDragStart = (e, mainIndex, subIndex) => {\n    setDraggedSubItem({ mainIndex, subIndex });\n    e.dataTransfer.effectAllowed = \"move\";\n  };\n\n  const onDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const onMainDrop = (e, newIndex) => {\n    e.preventDefault();\n    const draggedFrom = draggedMainItem;\n\n    if (draggedFrom === newIndex) {\n      return;\n    }\n\n    const updatedQuestions = [...questions];\n    const itemToMove = updatedQuestions.splice(draggedFrom, 1)[0];\n    updatedQuestions.splice(newIndex, 0, itemToMove);\n\n    // Update IDs based on new order\n    updatedQuestions.forEach((question, index) => {\n      question.id = index + 1;\n      question.subQuestions.forEach((subQuestion, subIndex) => {\n        subQuestion.id = `${question.id}.${subIndex + 1}`;\n      });\n    });\n\n    setQuestions(updatedQuestions);\n    setDraggedMainItem(null);\n  };\n\n  const onSubDrop = (e, mainIndex, newIndex) => {\n    e.preventDefault();\n    const draggedFrom = draggedSubItem;\n    const draggedTo = { mainIndex, newIndex };\n\n    if (\n      draggedFrom.mainIndex === draggedTo.mainIndex &&\n      draggedFrom.subIndex === draggedTo.subIndex\n    ) {\n      return;\n    }\n\n    const updatedQuestions = [...questions];\n    const itemToMove = updatedQuestions[draggedFrom.mainIndex].subQuestions.splice(draggedFrom.subIndex, 1)[0];\n    updatedQuestions[draggedTo.mainIndex].subQuestions.splice(draggedTo.subIndex, 0, itemToMove);\n\n    // Update IDs based on new order\n    updatedQuestions.forEach((question) => {\n      question.subQuestions.forEach((subQuestion, index) => {\n        subQuestion.id = `${question.id}.${index + 1}`;\n      });\n    });\n\n    setQuestions(updatedQuestions);\n    setDraggedSubItem(null);\n  };\n\n  const handleCheckboxChange = (mainIndex, subIndex, optionIndex) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[mainIndex].subQuestions[subIndex].checked[optionIndex] = !updatedQuestions[mainIndex].subQuestions[subIndex].checked[optionIndex];\n\n    setQuestions(updatedQuestions);\n  };\n\n  const handleTextboxChange = (mainIndex, subIndex, text) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[mainIndex].subQuestions[subIndex].text = text;\n\n    setQuestions(updatedQuestions);\n  };\n\n  return (\n    <div className=\"App\">\n      {questions.map((mainQuestion, mainIndex) => (\n        <div key={mainQuestion.id}>\n          <div\n            className=\"draggable main-question\"\n            draggable\n            onDragStart={(e) => onMainDragStart(e, mainIndex)}\n            onDragOver={onDragOver}\n            onDrop={(e) => onMainDrop(e, mainIndex)}\n          >\n            â‰¡ {mainQuestion.mainQuestion}\n          </div>\n          {mainQuestion.subQuestions.map((subQuestion, subIndex) => (\n            <div\n              key={subQuestion.id}\n              className=\"draggable sub-question\"\n              draggable\n              onDragStart={(e) => onSubDragStart(e, mainIndex, subIndex)}\n              onDragOver={onDragOver}\n              onDrop={(e) => onSubDrop(e, mainIndex, subIndex)}\n            >\n              â‰¡ {subQuestion.question}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}